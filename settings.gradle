rootProject.name = "Learn_Shadow"

//宿主
include ':app'

//Shadow 的源码库
includeBuildCopyLocalProperties("shadow/sdk/coding")
includeBuildCopyLocalProperties("shadow/sdk/core")
includeBuildCopyLocalProperties("shadow/sdk/dynamic")

//宿主和插件共用的常量
include ':shadow:HostPluginManagerConstant'
//宿主和插件的loader进行通信的bridge
include ':shadow:HostPluginLoaderBridge'
//宿主和插件进行通信的bridge
include ':shadow:HostPluginBridge'

//PluginManager
includeAndCopyLocalProperties("PluginManager", "shadow/PluginManager")

//插件项目
includeAndCopyLocalProperties("PluginDemo-normal-app", "shadow/PluginDemo/normal-app")
includeAndCopyLocalProperties("PluginDemo-plugin-app", "shadow/PluginDemo/plugin-app")
includeAndCopyLocalProperties("PluginDemo-plugin-app-lib", "shadow/PluginDemo/plugin-app-lib")
includeAndCopyLocalProperties("PluginDemo-plugin-loader", "shadow/PluginDemo/plugin-loader")
includeAndCopyLocalProperties("PluginDemo-plugin-runtime", "shadow/PluginDemo/plugin-runtime")

/**
 * 将主工程的 local.properties 拷贝到目标工程中去
 * @param projectName 目标工程
 * @return
 */
def includeBuildCopyLocalProperties(String projectName) {
    includeBuild projectName
    def localPropertiesFile = file("./local.properties")
    if (localPropertiesFile.exists()) {
        copy {
            from localPropertiesFile
            into projectName
        }
    }
}

/**
 * Android Studio目前不支持自动为复合构建中的子构建自动创建local.properties文件，所以我们将项目的 local.properties 拷贝到 ShadowSDK 的项目中去。
 */
def includeAndCopyLocalProperties(String projectName, String projectDir) {
    include projectName
    def targetPath = ""
    if (projectDir != null && projectDir.length() > 0) {
        project(":${projectName}").projectDir = file(projectDir)
        targetPath = projectDir
    } else {
        targetPath = projectName
    }

    def localPropertiesFile = file("./local.properties")
    if (localPropertiesFile.exists()) {
        copy {
            from localPropertiesFile
            into targetPath
        }
    }
}